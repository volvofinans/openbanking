openapi: 3.0.2
info:
  title: Volvofinans Bank Open Banking API
  version: "1.0"
  description: |
      ## Introduction
      Welcome to Volvofinans Bank Open Banking API documentation. The purpose of this document is to describe the Volvofinans Bank PSD2 services.

      ### Available services
      We currently provide Account Information Services (AIS). Se details below.

      ### Implementation

      #### HTTP & REST
      The APIs are implemented using REST and HTTP. All calls must use `https` and be authenticated.

      #### Authentication
      We use OAuth2 to authenticate requests. Tokens should be provided in the `Authorization` header and are valid for a limited time.

      #### Versioning and backwards compatibility
      We strive to keep the API backwards compatible. New fields and services might be added.

      Note that the API might change in the future. Volvofinans Bank AB reserve the right to change or update the API accordingly.

      #### Berlin Group NextGenPSD2 XS2A
      Volvofinans Bank Open Banking APIs is implemented using an adapted version of the Berlin Group NextGenPSD2 XS2A specification.

      Full Documentation of NextGenPSD2 Access to Account Interoperability Framework (General Introduction Paper, Operational Rules, Implementation Guidelines)
      Read more at: [https://www.berlin-group.org/nextgenpsd2-downloads](https://www.berlin-group.org/nextgenpsd2-downloads)

      ### Glossary
      - Account Holder: Account holder (and Co account holder) is the owner of the account. All details regarding the
      account is available to the account holder
      - Additional Card Holder: A card holder (additional card holder) might have access to a credit card but is not owner of the account. Only a few details
      are available to the card holder.
      - AIS: Account Information Services
      - AISP: Account Information Service Provider
      - ASPSP: Account Servicing Payment Service Provider
      - PSU: Payment Service User
      - TPP: Third Party Provider

  contact:
    name: Volvofinans Bank AB
    url: https://www.volvofinans.se
    email: openbanking@volvofinans.se

externalDocs:
  description: |
    Full documentation of Volvofinans Bank Open Banking API - Volvofinans Open Banking Developer Portal
  url: https://dev.volvofinans.se

servers:
  - url: https://api.sandbox.volvofinans.se/openbanking
    description: Sandbox environment

tags:
  - name: Account Information Service (AIS)
    description: |
      The Account Information Service (AIS) offers the following services
        * Transaction reports for a given account.
        * Balances of a given account.
        * A list of available accounts.
        * Account details of a given account or of the list of all accessible accounts relative to a granted consent.

paths:

  /v1/accounts:
    get:
      summary: Read Account List
      description: |
        Read the identifiers of the available account together with
        booking balance information, depending on the consent granted.

        It is assumed that a consent of the PSU to this access is already given to the ASPSP system.
        The addressed list of accounts depends then on the PSU ID and the consent addressed by the OAuth2 access token.

        Returns all identifiers of the accounts, to which an account access has been granted by the PSU.
      operationId: getAccountList
      tags:
        - Account Information Service (AIS)

      parameters:
      #query
        - $ref: "#/components/parameters/withBalanceQuery"
      #header
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-API-KEY"
        - $ref: "#/components/parameters/authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountList"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/accounts/{account-id}:
    get:
      summary: Read Account Details
      description: |
        Reads details about an account, with balances where required.
        It is assumed that a consent of the PSU to this access is already given to the ASPSP system.
        The addressed details of this account depends then on the PSU ID and the consent addressed by the OAuth2 access token.

        Give detailed information about the addressed account.

        Give detailed information about the addressed account together with balance information.
      operationId: readAccountDetails
      tags:
        - Account Information Service (AIS)

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
      #query
        - $ref: "#/components/parameters/withBalanceQuery"
      #header
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-API-KEY"
        - $ref: "#/components/parameters/authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountDetails"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/accounts/{account-id}/balances:

    get:
      summary: Read Balance
      description: |
        Reads account balance from a given account addressed by "account-id".

        The account-id is constant at least throughout the lifecycle of a given consent.
      operationId: getBalances
      tags:
        - Account Information Service (AIS)

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
      #header
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-API-KEY"
        - $ref: "#/components/parameters/authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_Balances"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v1/accounts/{account-id}/transactions:
    get:
      summary: Read transaction list of an account
      description: |
        Read transaction reports or transaction lists of a given account addressed by "account-id", depending on the steering parameter "bookingStatus".
        "bookingStatus" defaults to "both" if not specified.

        For a given account, additional parameters are e.g. the attributes "dateFrom", "dateTo" and "entryReferenceFrom".

        The transaction list return a maximum of 20 transactions per call. Use the query parameter "entryReferenceFrom" to fetch the following transactions. When more transactions are available the link "fetchMoreUrl" is returned.
      operationId: getTransactionList
      tags:
        - Account Information Service (AIS)

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
      #query
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/entryReferenceFrom"
        - $ref: "#/components/parameters/bookingStatus"
      #header
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-API-KEY"
        - $ref: "#/components/parameters/authorization"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountsTransactions"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

components:

  headers:

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false

    X-Request-ID:
      description: |
        ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

  responses:

    OK_200_AccountDetails:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountDetails"
          examples:
            "Regular Account":
              $ref: "#/components/examples/accountDetailsRegularAccount"

    OK_200_AccountList:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountList"
          examples:
            "Example 1: List of accounts":
              $ref: "#/components/examples/accountDetailsRegularAccounts"

    OK_200_AccountsTransactions:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/transactionsResponse-200_json"
          examples:
            "Example 1":
              $ref: "#/components/examples/transactionsExample1_CreditAccount_json"

    OK_200_Balances:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readAccountBalanceResponse-200"
          examples:
            "Example 1: Regular Account":
              $ref: "#/components/examples/balancesRegularAccount"

    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400_AIS:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_NG_AIS"

    UNAUTHORIZED_401_AIS:
      description: Unauthorized

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_NG_AIS"

    FORBIDDEN_403_AIS:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG_AIS"

    NOT_FOUND_404_AIS:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG_AIS"

    METHOD_NOT_ALLOWED_405_AIS:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_AIS"

    NOT_ACCEPTABLE_406_AIS:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error406_NG_AIS"

    REQUEST_TIMEOUT_408_AIS:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 408

    CONFLICT_409_AIS:
      description: Conflict

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      content:
        application/json:
          schema:
             $ref: "#/components/schemas/Error409_NG_AIS"

    UNSUPPORTED_MEDIA_TYPE_415_AIS:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 415

    TOO_MANY_REQUESTS_429_AIS:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error429_NG_AIS"

    INTERNAL_SERVER_ERROR_500_AIS:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 500

    SERVICE_UNAVAILABLE_503_AIS:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 503

  schemas:

    accountDetails:
      description: |
        Represents the account details
      type: object
      required:
        - resourceId
        - accountNumber
        - currency
        - product
        - accountType
        - status
      properties:
        resourceId:
          description: |
            The resourceId represents the specific account. This is the element to be used in the path when retrieving
            data from a dedicated account.
          type: string
          example: "AAwGMMLaejdSWH9XpEeZBpY1Y1HqOHcK_TgWnVzqegmE57oadNnvP_Urgx7ciHpjgf06w0phsDSKjnFijq8rD2y4Jjxkf7nmOfx6N-j2MAj9chg"
        accountNumber:
          $ref: "#/components/schemas/accountNumber"
        currency:
          $ref: "#/components/schemas/currencyCode"
        product:
          description: Product name of this account. Volvofinans Bank proprietary definition.
          type: string
          maxLength: 30
          example: "Volvokort Visa"
        balances:
          $ref: "#/components/schemas/balanceList"
        creditLimit:
          description: |
            The credit limit for the account.
            Valid for accounts with credits, i.e not debit accounts.
          allOf:
            - $ref: "#/components/schemas/amount"
        accountType:
          description: |
            The type of the account. One of the following
              - credit
              - debit
          type: string
          enum:
            - "credit"
            - "debit"
          example: "credit"
        loyaltyPoints:
          $ref: "#/components/schemas/loyaltyPoints"
        status:
          $ref: "#/components/schemas/accountStatus"

    accountId:
      description: This identification is denoting the addressed account, where the transaction has been performed.
      type: string
      example: "qwer3456tzui7890"

    address:
      type: object
      required:
        - country
      properties:
        city:
          type: string
        country:
          type: string
      example:
        {
          city: "Berlin",
          country: "DE"
        }

    accountList:
      description: |
        List of accounts with details.
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/accountDetails"

    accountNumber:
      description: |
        Represents a Volvofinans Bank account number.
      type: string
      maxLength: 7
      example: "5660729"

    accountReference:
      description: |
        Reference to an account via the account number

      type: object
      properties:
        accountNumber:
          $ref: "#/components/schemas/accountNumber"

    accountReport:
      description: |
        Account report.
        This account report contains transactions resulting from the query parameters.

        'booked' is contained if bookingStatus parameter is set to "booked" or "both".

        'pending' is not contained if the bookingStatus parameter is set to "booked".
      type: object
      properties:
        booked:
          $ref: "#/components/schemas/transactionList"
        pending:
          $ref: "#/components/schemas/transactionList"

    accountStatus:
      description: |
        Account status. The value is one of the following
          - "enabled": account is available
          - "deleted": account is terminated
          - "blocked": account is blocked e.g. for legal reasons
        If this field is not used, then the account is available in the sense of this specification.
      type: string
      enum:
        - "enabled"
        - "deleted"
        - "blocked"
      example: "enabled"

    amount:
      description: |
        Amount represents an amount consisting of the value and the currency.

      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          $ref: "#/components/schemas/amountValue"
        currency:
          $ref: "#/components/schemas/currencyCode"
      example:
        {
          "amount": "1024.26",
          "currency": "SEK"
        }

    amountValue:
      description: |
        The amount given with fractional digits, where fractions must be compliant to the currency definition.
        Up to 14 significant figures. Negative amounts are signed by minus.
        The decimal separator is a dot.

        **Example:**
        Valid representations for EUR with up to two decimals are:

          * 1056
          * 5768.2
          * -1.50
          * 5877.78
      type: string
      pattern: "-?[0-9]{1,14}(\\.[0-9]{1,2})?"
      example: "5877.78"

    balance:
      description: |
        A single balance element
      type:
        object
      required:
        - balanceAmount
        - balanceType
      properties:
        balanceAmount:
          $ref: "#/components/schemas/amount"
        balanceType:
          $ref: "#/components/schemas/balanceType"

    balanceList:
      description: |
        A list of balances for the account, e.g. the expected balance.
        The list might be restricted to the expected balance.
      type: array
      items:
        $ref: "#/components/schemas/balance"

    balanceType:
      description: |
        The following balance types are defined:
          - "expected":
            Balance composed of booked entries and pending items known at the time of calculation,
            which projects the end of day balance if everything is booked on the account and no other entry is posted.

            This is composed of
              - invoiced, but not yet paid entries,
              - not yet invoiced but already booked entries and
              - pending items (not yet booked)
      type: string
      enum:
          - "expected"

    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code
      type: string
      pattern: "[A-Z]{3}"
      example: "SEK"

    fuelDetails:
      description: |
        Fueling details for fueling purchases made at partner petrol stations.
      type: object
      properties:
        volume:
          description: |
            Volume of fuel
          type: number
          format: double
        quality:
          description: |
            Fueling quality
          type: string
          example: "diesel"
        unit:
          description: |
            Unit of the fueling quality.
          type: string
          enum:
            - "LITER"
            - "KG"

    loyaltyPoints:
      description: |
        Earned loyalty points not yet converted to loyalty checks.
      type: number
      format: double
      example: "340.5"

    proprietaryBankTransactionCode:
      description: |
        Proprietary bank transaction code as used within Volvofinans Bank.

        Valid for all types of transactions.
      type: string
      maxLength: 35
      enum:
        - "CORRECTION" # Corrections on account
        - "FEE"        # Fees deducted from account
        - "INTEREST"   # Account interest
        - "PAYMENT"    # Payments to the account
        - "PURCHASE"   # Regular purchases
        - "TRANSFER"   # Transfer between accounts, internal and external
        - "UNKNOWN"    # Should never be used

    readAccountBalanceResponse-200:
      description: Body of the response for a successful read balance for an account request.
      type: object
      required:
        - balances
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        balances:
          $ref: "#/components/schemas/balanceList"

    transactionDetails:
      description: Transaction details
      type: object
      properties:
        transactionId:
          description: |
            Tokenised identifier for a transaction.

            Valid for all types of transactions.

            Available for Account Holders and Additional Card Holders.
          type: string
        proprietaryBankTransactionCode:
          $ref: "#/components/schemas/proprietaryBankTransactionCode"
        price:
          description: |
            The initial price before fees and deductions has been applied.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        transactionDetails:
          description: |
            Detailed transaction information, i.e the transaction text.

            Valid for all types of transactions.

            Available for Account Holders and Additional Card Holders.
          type: string
        transactionAmount:
          description: |
            The amount and currency of the transaction that the account is charged.

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        originalAmount:
          description: |
            The amount of a transaction in the original purchase currency.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE, CORRECTION.

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        cardAcceptorAddress:
          description: |
            The location, city and country, where the purchase was made

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Valid only for "booked" transactions and included if city and/or country is available.

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/address"
        foreignTransactionFee:
          description: |
            The amount added, in SEK, for transactions made with foreign currencies.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        withdrawalFee:
          description: |
            The amount, in SEK, added for withdrawals e.g. ATMs.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        transactionDate:
          description: |
            The transaction date for the transaction.

            Valid for all types of transactions.

            Available for Account Holders and Additional Card Holders.
          type: string
          format: date
        cardSequence:
          description: |
            The sequence number of the card used for the transaction

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Note that some types of purchases, i.e. purchase initiated from CarPay, does not include the card sequence.

            Available for Account Holders and Additional Card Holders.
          type: number
        loyaltyPoints:
          description: |
            The amount of loyalty points that the transaction rewarded.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Valid only for "booked" transactions.
          allOf:
            - $ref: "#/components/schemas/loyaltyPoints"

          type: number
          format: double
        discount:
          description: |
            The discount the purchase was given.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Valid only for "booked" transactions and only included if discount was given.

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        loyaltyCheck:
          description: |
            The amount of the deducted loyalty check(s).

            Valid only for "booked" transactions and included if loyalty check was used for the purchase.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Available for Account Holders and Additional Card Holders.
          allOf:
            - $ref: "#/components/schemas/amount"
        visaMerchantCategory:
          description: |
            The Visa Merchant Category description.

            Valid only for "booked" transactions for purchases made within the Visa network.

            Valid for transactions with proprietaryBankTransactionCode: PURCHASE

            Available for Account Holders and Additional Card Holders.
          type: string
          example: "FINANCIAL INST/AUTOMATED CASH DISBURSEMENTS"
        fromAccount:
          description: |
            Account that funds was transferred from.

            Valid for transactions with proprietaryBankTransactionCode: TRANSFER

            Available for Account Holders.
          type: string
        toAccount:
          description: |
            Account that funds was transfered to when transfering between two Volvofinans Bank Accounts.

            Valid for transactions with proprietaryBankTransactionCode: TRANSFER

            Available for Account Holders.
          type: string
        bank:
          description: |
            Bank that funds was transfered to when transfering funds to an external account.

            Valid for transactions with proprietaryBankTransactionCode: TRANSFER

            Available for Account Holders.
          type: string
        clearingNumber:
          description: |
            Clearing number of external bank account that funds was transfered to when transfering funds to an external account.

            Valid only for transactions of type TRANSFER.

            Available for Account Holders.
          type: string
        bankAccountNumber:
          description: |
            Account number of external bank account that funds was transfered to when transfering funds to an external account.

            Valid only for transactions of type TRANSFER.

            Available for Account Holders.
          type: string
        ownMessage:
          description: |
            Message that the customer provides for the transfer

            Valid only for transactions of type TRANSFER.

            Available for Account Holders.
          type: string
        fuelDetails:
          description: |
          allOf:
            - $ref: "#/components/schemas/fuelDetails"

    transactionId:
      description: |
        This identification is given by the attribute transactionId of the corresponding entry of a transaction list.
      type: string
      example: "16fe0b41fa5b9e4b65db56248cf83dc87eb0af9561945dc70a82ca951b78abe2"

    transactionList:
      description: Array of transaction details
      type: array
      items:
        $ref: "#/components/schemas/transactionDetails"

    transactionsResponse-200_json:
      description: |
        Body of the JSON response for a successful read transaction list request.
        This account report contains transactions resulting from the query parameters.
      type: object
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        transactions:
          $ref: "#/components/schemas/accountReport"
        _links:
          description: |
            The _links property is only available if there are more transactions to fetch for the given date interval.
          type: object
          properties:
            fetchMoreUrl:
              description: Url to use to fetch more transactions for the given date interval.

    MessageCode400_AIS:
      description: Message codes defined for AIS for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"
        - "PARAMETER_NOT_CONSISTENT"
        - "PARAMETER_NOT_SUPPORTED"
        - "SERVICE_INVALID"
        - "RESOURCE_UNKNOWN"
        - "RESOURCE_EXPIRED"
        - "RESOURCE_BLOCKED"
        - "TIMESTAMP_INVALID"
        - "PERIOD_INVALID"
        - "SCA_METHOD_UNKNOWN"
        - "CONSENT_UNKNOWN"
        - "SESSIONS_NOT_SUPPORTED"

    MessageCode401_AIS:
      description: Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"
        - "CERTIFICATE_EXPIRED"
        - "CERTIFICATE_BLOCKED"
        - "CERTIFICATE_REVOKE"
        - "CERTIFICATE_MISSING"
        - "SIGNATURE_INVALID"
        - "SIGNATURE_MISSING"
        - "CORPORATE_ID_INVALID"
        - "PSU_CREDENTIALS_INVALID"
        - "CONSENT_INVALID"
        - "CONSENT_EXPIRED"
        - "TOKEN_UNKNOWN"
        - "TOKEN_INVALID"
        - "TOKEN_EXPIRED"

    MessageCode403_AIS:
      description: Message codes defined for AIS for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "CONSENT_UNKNOWN"
        - "SERVICE_BLOCKED"
        - "RESOURCE_UNKNOWN"
        - "RESOURCE_EXPIRED"

    MessageCode404_AIS:
      description: Message codes defined for AIS for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"

    MessageCode405_AIS:
      description: Message codes defined for AIS for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"

    MessageCode406_AIS:
      description: Message codes defined for AIS for HTTP Error code 406 (NOT ACCEPTABLE).
      type: string
      enum:
        - "REQUESTED_FORMATS_INVALID"

    MessageCode409_AIS:
      description: Message codes defined for AIS for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"

    MessageCode429_AIS:
      description: Message codes for HTTP Error code 429 (TOO MANY REQUESTS).
      type: string
      enum:
        - "ACCESS_EXCEEDED"

#####################################################
# Tpp-Messages to Communicate Error Information
#####################################################

  #####################################################
  # Generic Elements
  #####################################################

    tppMessageCategory:
      description: Category of the TPP message category
      type: string
      enum:
        - "ERROR"
        - "WARNING"

  #####################################################
  # RFC7807 Messages
  #####################################################

    tppErrorTitle:
      description: |
        Short human readable description of error type.
        Could be in local language.
        To be provided by ASPSPs.
      type: string
      maxLength: 70

    tppErrorDetail:
      description: |
        Detailed human readable text specific to this instance of the error.
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 512

  #####################################################
  # Next Gen proprietary Tpp-Messages
  #####################################################

    tppMessageText:
      description: Additional explaining text to the TPP.
      type: string
      maxLength: 512

    ## ERRORS

    Error400_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage400_AIS"

    Error401_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage401_AIS"

    Error403_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage403_AIS"

    Error404_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage404_AIS"

    Error405_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 405.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage405_AIS"

    Error406_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 406.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage406_AIS"

    Error409_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage409_AIS"
      example:
        [{
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    Error429_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 429.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/tppMessage429_AIS"
      example:
        [{
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the ASPSP up to 512 characters"
        }]

    tppMessage400_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage401_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage403_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage404_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage405_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage406_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode406_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage409_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

    tppMessage429_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
           $ref: "#/components/schemas/tppMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode429_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/tppMessageText"

  parameters:

    authorization:
      name: Authorization
      in: header
      description: Authorization header
      required: true
      example: "Bearer <token>"
      schema:
        type: string

    accountId:
      name: account-id
      in: path
      description: |
        This identification is denoting the addressed account.
        The account-id is retrieved by using a "Read Account List" call.
        The account-id is the "id" attribute of the account structure.

        Its value is constant at least throughout the lifecycle of a given consent.
      required: true
      schema:
        $ref: "#/components/schemas/accountId"

    bookingStatus:
      name: bookingStatus
      in: query
      description: |
        Permitted codes are
          * "booked",
          * "pending" and
          * "both"
      required: false
      schema:
        type: string
        enum:
          - "booked"
          - "pending"
          - "both"

    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the transaction list

        For booked transactions, the relevant date is the booking date.

        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.
      required: false
      schema:
        type: string
        format: date

    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the transaction list, default is "now" if not given.

        For booked transactions, the relevant date is the booking date.

        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.

      required: false
      schema:
        type: string
        format: date

    entryReferenceFrom:
      name: entryReferenceFrom
      in: query
      description: |
        This data attribute is indicating that the AISP shall get all transactions after the transaction with
        identification entryReferenceFrom. This is a implementation of a delta access.
        If this data element is contained, the entry "dateFrom" is ignored.
      required: false
      schema:
        type: string

    withBalanceQuery:
      name: withBalance
      in: query
      description: |
        If this parameter is set to 'true' then the list of accounts will include the booking balance.
      required: false
      schema:
        type: boolean

    X-API-KEY:
      name: X-API-KEY
      in: header
      description: Api key, unique to the TPP and application.
      required: true
      example: "BXnC6qcUq1VtH2SVmYTwMrjcvRn30GoJ"
      schema:
        type: string

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

  examples:
    accountDetailsRegularAccounts:
      description: Account Details for regular credit accounts.
      value:
        [
          {
            "resourceId": "AAwGMMLaejdSWH9XpEeZBpY1Y1HqOHcK_TgWnVzqegmE57oadNnvP_Urgx7ciHpjgf06w0phsDSKjnFijq8rD2y4Jjxkf7nmOfx6N-j2MAj9chg",
            "accountNumber": "5660729",
            "currency": "SEK",
            "product": "Volvokort Visa",
            "balances": [
                {
                    "balanceAmount": {
                        "amount": -1024.26,
                        "currency": "SEK"
                    },
                    "balanceType": "expected"
                }
            ],
            "creditLimit": {
                "amount": 35000,
                "currency": "SEK"
            },
            "accountType": "CREDIT",
            "loyaltyPoints": 3404.5,
            "status": "enabled"
          },
          {
            "resourceId": "AAwGMMLaejdSWH9XpEeZBpY1Y1HqOHcK_TgWnVzqegmE57oadNnvP_Urgx7ciHpjgf06w0phsDSKjnFijq8rD2y4Jjxkf7nmOfx6N-j2MAj9chg",
            "accountNumber": "5375491",
            "currency": "SEK",
            "product": "Renaultkort Visa",
            "balances": [
                {
                    "balanceAmount": {
                        "amount": -6311.59,
                        "currency": "SEK"
                    },
                    "balanceType": "expected"
                }
            ],
            "creditLimit": {
                "amount": 15000,
                "currency": "SEK"
            },
            "accountType": "CREDIT",
            "loyaltyPoints": 259,
            "status": "enabled"
          }
        ]

    accountDetailsRegularAccount:
      description: Account Details for a regular credit account.
      value:
        {
          "resourceId": "AAwGMMLaejdSWH9XpEeZBpY1Y1HqOHcK_TgWnVzqegmE57oadNnvP_Urgx7ciHpjgf06w0phsDSKjnFijq8rD2y4Jjxkf7nmOfx6N-j2MAj9chg",
          "accountNumber": "5660729",
          "currency": "SEK",
          "product": "Volvokort Visa",
          "balances": [
              {
                  "balanceAmount": {
                      "amount": -1024.26,
                      "currency": "SEK"
                  },
                  "balanceType": "expected"
              }
          ],
          "creditLimit": {
              "amount": 35000,
              "currency": "SEK"
          },
          "accountType": "CREDIT",
          "loyaltyPoints": 3404.5,
          "status": "enabled"
        }

    balancesRegularAccount:
      description: Account Balance for a regular credit account.
      value:
        {
          "account": {
              "accountNumber": "5660729"
          },
          "balances": [
              {
                  "balanceAmount": {
                      "amount": -1024.26,
                      "currency": "SEK"
                  },
                  "balanceType": "expected"
              }
          ]
        }

    transactionsExample1_CreditAccount_json:
      description: Transactions example for a regular credit account
      value:
        {
          "account": {
              "accountNumber": "5660729"
          },
          "transactions": {
              "booked": [
                  {
                      "transactionId": "8d90cd63bbbc0d8e58c9096948f832bfe5c52759bfc0434826681edc0d72f35f",
                      "proprietaryBankTransactionCode": "TRANSFER",
                      "transactionDetails": "Överföring",
                      "transactionAmount": {
                          "amount": 1500,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-14",
                      "fromAccount": "5680430",
                      "toAccount": "5660729",
                      "ownMessage": "Anonym"
                  },
                  {
                      "transactionId": "081724ad79f22c7fbaa31835bbf645498126af60a7e4835f696b1b9793b6d9ce",
                      "proprietaryBankTransactionCode": "TRANSFER",
                      "transactionDetails": "Uttag",
                      "transactionAmount": {
                          "amount": -15000,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-12",
                      "fromAccount": "5660729",
                      "bank": "Nordea - personkonto",
                      "clearingNumber": "3300",
                      "bankAccountNumber": "5009101824",
                      "ownMessage": "Anonym"
                  },
                  {
                      "transactionId": "cc2131cf0919cb4032d28cea036234f3575d1e9e55747caa97cd264c519f9f40",
                      "proprietaryBankTransactionCode": "PAYMENT",
                      "transactionDetails": "Inbetalt via Bankgiro",
                      "transactionAmount": {
                          "amount": 2490.5,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-11"
                  },
                  {
                      "transactionId": "d98cf6fed3821ad7a00dcf39878e012636764bffe1099386a2b7a3579cae361a",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "Volvohandlaren",
                      "price": {
                          "amount": -9962,
                          "currency": "SEK"
                      },
                      "transactionAmount": {
                          "amount": -9962,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-09",
                      "loyaltyPoints": 9962
                  },
                  {
                      "transactionId": "8a20d38dfb40461b690902d7a2fde6485c996a096ad374430656ee247cf60692",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "Cale Access AB",
                      "price": {
                          "amount": -103,
                          "currency": "SEK"
                      },
                      "transactionAmount": {
                          "amount": -103,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-08",
                      "cardSequence": 1,
                      "loyaltyPoints": 51.5
                  },
                  {
                      "transactionId": "3b50e2d7ec37f26b4f9b83e675068d25c4e51a135c4f7d344ec5be20b821c2f1",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "CASH CARISBO   2022-BOLOG",
                      "price": {
                          "amount": -2569.79,
                          "currency": "SEK"
                      },
                      "transactionAmount": {
                          "amount": -2659.74,
                          "currency": "SEK"
                      },
                      "originalAmount": {
                          "amount": -250,
                          "currency": "EUR"
                      },
                      "foreignTransactionFee": {
                          "amount": -38.55,
                          "currency": "SEK"
                      },
                      "withdrawalFee": {
                          "amount": -51.4,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-07",
                      "cardSequence": 1,
                      "loyaltyPoints": 0,
                      "cardAcceptorAddress": {
                          "city": "BOLOGNA",
                          "country": "IT"
                      },
                      "visaMerchantCategory": "FINANCIAL INST/AUTOMATED CASH DISBURSEMENTS"
                  },
                  {
                      "transactionId": "7f2ac3fe884312da381083ed8f144bdb975b48a60ee1640679c25fa0ed465695",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "BANKOMAT HULTA TORG 4",
                      "price": {
                          "amount": -2000,
                          "currency": "SEK"
                      },
                      "transactionAmount": {
                          "amount": -2040,
                          "currency": "SEK"
                      },
                      "withdrawalFee": {
                          "amount": -40,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-07",
                      "cardSequence": 1,
                      "loyaltyPoints": 0,
                      "cardAcceptorAddress": {
                          "city": "BORAS",
                          "country": "SE"
                      },
                      "visaMerchantCategory": "FINANCIAL INST/AUTOMATED CASH DISBURSEMENTS"
                  },
                  {
                      "transactionId": "5fd82569605f3429e0752512de5b12e9bd6f66a91f9a8e20d3312e7f9f883db2",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "ATM SPAREBANKEN MOERE LAN",
                      "price": {
                          "amount": -2123.81,
                          "currency": "SEK"
                      },
                      "transactionAmount": {
                          "amount": -2123.81,
                          "currency": "SEK"
                      },
                      "originalAmount": {
                          "amount": -2000,
                          "currency": "NOK"
                      },
                      "foreignTransactionFee": {
                          "amount": -30.78,
                          "currency": "SEK"
                      },
                      "withdrawalFee": {
                          "amount": -41.04,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-06",
                      "cardSequence": 1,
                      "loyaltyPoints": 0,
                      "cardAcceptorAddress": {
                          "city": "AALESUND",
                          "country": "NO"
                      },
                      "visaMerchantCategory": "FINANCIAL INST/AUTOMATED CASH DISBURSEMENTS"
                  }
              ],
              "pending": [
                  {
                      "transactionId": "5b6eec3fbb7753d40df8952ab152398e778a2ec73bb01e0a69e8434476b971f8",
                      "proprietaryBankTransactionCode": "TRANSFER",
                      "transactionDetails": "Utbetalning",
                      "transactionAmount": {
                          "amount": -85,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-30",
                      "fromAccount": "5660729",
                      "bank": "SEB",
                      "clearingNumber": "5174",
                      "bankAccountNumber": "24176",
                      "ownMessage": "Anonym"
                  },
                  {
                      "transactionId": "df6e9798342637861e6d0a5b219f242a9bf643c4791ff4483d6f453fee485ca5",
                      "proprietaryBankTransactionCode": "TRANSFER",
                      "transactionDetails": "Överföring",
                      "transactionAmount": {
                          "amount": 5000,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-30",
                      "fromAccount": "5680430",
                      "toAccount": "5660729",
                      "ownMessage": "Anonym"
                  },
                  {
                      "transactionId": "4871fa0d5fd987169756431440abf9738899d4b9ca866a7243e32b96938cbf0f",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "PARKERINGSBOLAGET",
                      "transactionAmount": {
                          "amount": -10,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-20",
                      "cardSequence": 1
                  },
                  {
                      "transactionId": "ed32394d46c58e529a5f643aafd9fac274c867bd7c71133e7e55edea003963e0",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "Tanka Stockholm",
                      "transactionAmount": {
                          "amount": -253.25,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-16",
                      "cardSequence": 1
                  },
                  {
                      "transactionId": "71e3e4ed9c1bce19d53a3641fae32891454556de32b0f0581f2682070365b3f3",
                      "proprietaryBankTransactionCode": "PURCHASE",
                      "transactionDetails": "Tanka Karlstad",
                      "transactionAmount": {
                          "amount": -481.72,
                          "currency": "SEK"
                      },
                      "transactionDate": "2019-05-16",
                      "cardSequence": 1
                  }
              ]
          }
        }
